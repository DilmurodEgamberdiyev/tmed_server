# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import specialist_pb2 as specialist_dot_specialist__pb2


class SpecialistControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_stream(
                '/specialist.SpecialistController/List',
                request_serializer=specialist_dot_specialist__pb2.SpecialistListRequest.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                )
        self.Create = channel.unary_unary(
                '/specialist.SpecialistController/Create',
                request_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                )
        self.Retrieve = channel.unary_unary(
                '/specialist.SpecialistController/Retrieve',
                request_serializer=specialist_dot_specialist__pb2.SpecialistRetrieveRequest.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                )
        self.Update = channel.unary_unary(
                '/specialist.SpecialistController/Update',
                request_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                )
        self.Destroy = channel.unary_unary(
                '/specialist.SpecialistController/Destroy',
                request_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ValidateMeetDate = channel.unary_unary(
                '/specialist.SpecialistController/ValidateMeetDate',
                request_serializer=specialist_dot_specialist__pb2.ValidateMeetDateRequest.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.ValidateMeetDateResponse.FromString,
                )
        self.SpecialistKPI = channel.unary_unary(
                '/specialist.SpecialistController/SpecialistKPI',
                request_serializer=specialist_dot_specialist__pb2.SpecialistKPIRequest.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.SpecialistKPIResponse.FromString,
                )
        self.ListSpecialistsDetailed = channel.unary_stream(
                '/specialist.SpecialistController/ListSpecialistsDetailed',
                request_serializer=specialist_dot_specialist__pb2.SpecialistListRequest.SerializeToString,
                response_deserializer=specialist_dot_specialist__pb2.SpecialistDetailed.FromString,
                )


class SpecialistControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Retrieve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateMeetDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpecialistKPI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpecialistsDetailed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpecialistControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_stream_rpc_method_handler(
                    servicer.List,
                    request_deserializer=specialist_dot_specialist__pb2.SpecialistListRequest.FromString,
                    response_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                    response_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
            ),
            'Retrieve': grpc.unary_unary_rpc_method_handler(
                    servicer.Retrieve,
                    request_deserializer=specialist_dot_specialist__pb2.SpecialistRetrieveRequest.FromString,
                    response_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                    response_serializer=specialist_dot_specialist__pb2.Specialist.SerializeToString,
            ),
            'Destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.Destroy,
                    request_deserializer=specialist_dot_specialist__pb2.Specialist.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ValidateMeetDate': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateMeetDate,
                    request_deserializer=specialist_dot_specialist__pb2.ValidateMeetDateRequest.FromString,
                    response_serializer=specialist_dot_specialist__pb2.ValidateMeetDateResponse.SerializeToString,
            ),
            'SpecialistKPI': grpc.unary_unary_rpc_method_handler(
                    servicer.SpecialistKPI,
                    request_deserializer=specialist_dot_specialist__pb2.SpecialistKPIRequest.FromString,
                    response_serializer=specialist_dot_specialist__pb2.SpecialistKPIResponse.SerializeToString,
            ),
            'ListSpecialistsDetailed': grpc.unary_stream_rpc_method_handler(
                    servicer.ListSpecialistsDetailed,
                    request_deserializer=specialist_dot_specialist__pb2.SpecialistListRequest.FromString,
                    response_serializer=specialist_dot_specialist__pb2.SpecialistDetailed.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'specialist.SpecialistController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpecialistController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/specialist.SpecialistController/List',
            specialist_dot_specialist__pb2.SpecialistListRequest.SerializeToString,
            specialist_dot_specialist__pb2.Specialist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/Create',
            specialist_dot_specialist__pb2.Specialist.SerializeToString,
            specialist_dot_specialist__pb2.Specialist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Retrieve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/Retrieve',
            specialist_dot_specialist__pb2.SpecialistRetrieveRequest.SerializeToString,
            specialist_dot_specialist__pb2.Specialist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/Update',
            specialist_dot_specialist__pb2.Specialist.SerializeToString,
            specialist_dot_specialist__pb2.Specialist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/Destroy',
            specialist_dot_specialist__pb2.Specialist.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateMeetDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/ValidateMeetDate',
            specialist_dot_specialist__pb2.ValidateMeetDateRequest.SerializeToString,
            specialist_dot_specialist__pb2.ValidateMeetDateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpecialistKPI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/specialist.SpecialistController/SpecialistKPI',
            specialist_dot_specialist__pb2.SpecialistKPIRequest.SerializeToString,
            specialist_dot_specialist__pb2.SpecialistKPIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpecialistsDetailed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/specialist.SpecialistController/ListSpecialistsDetailed',
            specialist_dot_specialist__pb2.SpecialistListRequest.SerializeToString,
            specialist_dot_specialist__pb2.SpecialistDetailed.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
