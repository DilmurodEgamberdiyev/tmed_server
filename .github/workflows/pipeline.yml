name: Github Actions CI/CD

on:
  push:
    branches: ['main']

env:
  SSH_HOST: ${{ vars.SSH_HOST }}
  SSH_USER: ${{ vars.SSH_USER }}
  SSH_PORT: ${{ vars.SSH_PORT }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  APP_DIRECTORY: ${{ vars.APP_DIRECTORY }}
  SSH_FILE_NAME: ~/.ssh/${{ vars.SSH_FILE_NAME }}

jobs:
  build_and_push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        environment: [main]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build
        run: 
          echo "Building for environment = ${{ matrix.environment }}, SSH_HOST = ${{ env.SSH_HOST}}"

      - name: Executing remote SSH commands to pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          port: ${{ env.SSH_PORT }}
          username: ${{ env.SSH_USER }}
          key_path: ${{ env.SSH_FILE_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "GIT PULL STARTED"
            cd "${{ env.APP_DIRECTORY }}"
            git pull
            echo "GIT PULL FINISHED"
 
  
  
  deploy:
    needs: build_and_push
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Executing remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          port: ${{ env.SSH_PORT }}
          username: ${{ env.SSH_USER }}
          key_path: ${{ env.SSH_FILE_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "DEPLOY STARTED"
            cd "${{ env.APP_DIRECTORY }}"
            git pull
            echo "git pull DONE"

            docker stop "${{ env.SERVICE_NAME }}" || true
            docker rm "${{ env.SERVICE_NAME }}" || true
            docker compose down || true
            docker compose -f docker-compose-production.yml build --no-cache
            docker compose -f docker-compose-production.yml up -d --build --force-recreate
            echo "DEPLOY FINISHED"
