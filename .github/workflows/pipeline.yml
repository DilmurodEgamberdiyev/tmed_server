name: Github Actions CI/CD

on:
  push:
    branches: ['main']

# env:
#   SSH_HOST: $SSH_HOST
#   SSH_USER: $SSH_USER
#   SSH_PORT: $SSH_PORT
#   SERVICE_NAME: $SERVICE_NAME
#   APP_DIRECTORY: $APP_DIRECTORY
#   SSH_FILE_NAME: ~/.ssh/$SSH_FILE_NAME

jobs:
  build_and_push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        environment: [main]

    environment: ${{ matrix.environment }}
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Executing remote SSH commands to pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key_path: ~/.ssh/${{ vars.SSH_FILE_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "GIT PULL STARTED"
            cd "${{ vars.APP_DIRECTORY }}"
            git pull
            echo "GIT PULL FINISHED"
 

  deploy:
    needs: build_and_push
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Executing remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key_path: ~/.ssh/${{ vars.SSH_FILE_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "DEPLOY STARTED"
            cd "${{ vars.APP_DIRECTORY }}"
            git pull
            echo "git pull DONE"

            docker stop "${{ vars.SERVICE_NAME }}" || true
            docker rm "${{ vars.SERVICE_NAME }}" || true
            docker compose down || true
            docker compose -f docker-compose-production.yml build --no-cache
            docker compose -f docker-compose-production.yml up -d --build --force-recreate
            echo "DEPLOY FINISHED"
